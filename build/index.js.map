{"version":3,"file":"index.js","sources":["../../Tenjs2/src/element.js","../../Tenjs2/src/reconciler.js","../../Tenjs2/src/component.js","../../Tenjs2/ten.js","../src/index.js"],"sourcesContent":["export const TEXT_ELEMENT = 'TEXT ELEMENT';\n\n/**\n* @param {object} type\n* @param {object} config\n* @return {object}\n*/\nexport default function createElement(type, config, ...args) {\n  const props = Object.assign({}, config);\n  const hasChildren = args.length > 0;\n  // if props has children, concat arguments to an empty array\n  const rawChildren = hasChildren ? [].concat(...args) : [];\n  props.children = rawChildren\n    .filter((child) => child != null && child !== false)\n    // if its an object just put it back, else replace it with text element\n    .map((child) => child instanceof Object? child : createTextElement(child));\n  return {type, props};\n}\n\n/**\n * @param {text} value\n * @return {function}\n */\nfunction createTextElement(value) {\n  return createElement(TEXT_ELEMENT, {nodeValue: value});\n}\n","import {TEXT_ELEMENT} from './element';\nimport {createPublicInstance} from './component';\n\nlet rootInstance = null;\n/**\n@param {object} element\n@param {object} container\n*/\nexport function render(element, container) {\n  const prevInstance = rootInstance;\n  const nextInstance = reconcile(container, prevInstance, element);\n  rootInstance = nextInstance;\n}\n\n/**\n* @param {object} parentDom\n* @param {object} instance\n* @param {object} element\n* @return {object}\n*/\nexport function reconcile(parentDom, instance, element) {\n  if (instance == null) {\n    const newInstance = instantiate(element);\n    parentDom.appendChild(newInstance.dom);\n    return newInstance;\n  } else if (element == null) {\n    parantDom.removeChild(instance.dom);\n    return null;\n  } else if (instance.element.type === element.type) {\n    updateDomProperties(instance.dom, instance.element.props, element.props);\n    instance.childInstances = reconcileChildren(instance, element);\n    instance.element = element;\n    return instance;\n  } else if (typeof element.type === 'string') {\n    // update dom instance\n    updateDomProperties(instance.dom, instance.element.props, element.props);\n    instance.childInstances = reconcileChildren(instance, element);\n    return instance;\n  } else {\n    // update composite instance\n    instance.publicInstance.props = element.props;\n    const childElement = instance.publicInstance.render();\n    const oldChildInstance = instance.childInstance;\n    const childInstance = reconcile(parentDom, oldChildInstance, childElement);\n    instance.dom = childInstance.dom;\n    instance.childInstance = childInstance;\n    instane.element = element;\n    return instance;\n  }\n}\n\n/**\n* @param {object} instance\n* @param {object} element\n* @return {object}\n*/\nfunction reconcileChildren(instance, element) {\n  const dom = instance.dom;\n  const childInstances = instance.childInstances;\n  const nextChildElements = elements.props.children || [];\n  const newChildInstances = [];\n  const count = Math.max(childInstances.length, nextChildElements.length);\n  for (let i = 0; i < count; i++) {\n    const childInstance = childInstances[i];\n    const childElement = nextChildElements[i];\n    const newChildInstance = reconcile(dom, childInstance, childElement);\n    newChildInstances.push(newChildInstance);\n  }\n  return newChildInstances.filter((instance) => instance != null);\n}\n\n/**\n * @param {object} element\n * @return {object}\n */\nfunction instantiate(element) {\n  const {type, props} = element;\n  const isDOMElement = typeof type === 'string';\n  if (isDOMElement) {\n    const isTextElement = type === TEXT_ELEMENT;\n    // create dom\n    const dom = isTextElement\n      ? document.createTextNode('')\n      : document.createElement(type);\n    updateDomProperties(dom, [], props);\n\n    // instantiate and append children\n    const childElements = props.children || [];\n    const childInstances = childElements.map(instantiate);\n    const childDoms = childInstances.map((childInstance) => childInstance.dom);\n    childDoms.forEach((childDom) => dom.appendChild(childDom));\n\n    const instance = {dom, element, childInstances};\n    return instance;\n  } else {\n    const instance = {};\n    const publicInstance = createPublicInstance(element, instance);\n    const childElement = publicInstance.render();\n    const childInstance = instantiate(childElement);\n    const dom = childInstance.dom;\n\n    Object.assign(instance, {dom, element, childInstance, publicInstance});\n    return instance;\n  }\n}\n\n/**\n * dom utilities\n * @param {object} dom\n * @param {object} prevProps\n * @param {object} nextProps\n */\nfunction updateDomProperties(dom, prevProps, nextProps) {\n  const isEvent = (name) => name.startsWith('on');\n  const isAttribute = (name) => !isEvent(name) && name != 'children';\n\n    // Remove event listeners\n    Object.keys(prevProps).filter(isEvent).forEach((name) => {\n      const eventType = name.toLowerCase().substring(2);\n      dom.removeEventListener(eventType, prevProps[name]);\n    });\n\n    // Remove attributes\n    Object.keys(prevProps).filter(isAttribute).forEach((name) => {\n      dom[name] = null;\n    });\n\n    // Set attributes\n    Object.keys(nextProps).filter(isAttribute).forEach((name) => {\n      dom[name] = nextProps[name];\n    });\n\n    // Add event listeners\n    Object.keys(nextProps).filter(isEvent).forEach((name) => {\n      const eventType = name.toLowerCase().substring(2);\n      dom.addEventListener(eventType, nextProps[name]);\n    });\n}\n","import {reconcile} from './reconciler';\n/**\n*/\nexport class Component {\n  /**\n   *  @param {object} props\n   */\n   constructor(props) {\n     this.props = props;\n     this.state = this.state || {};\n   }\n\n   /**\n   * @param {object} partialState\n   */\n   setState(partialState) {\n     this.state = object.assign({}, this.state, partialState);\n     updateInstance(this._internalInstance);\n   }\n}\n\n/**\n * @param {object} internalInstance\n */\nfunction updateInstance(internalInstance) {\n  const parentDom = internalInstance.dom.parentNode;\n  const element = internalInstance.element;\n  reconcile(parentDom, internalInstance, element);\n}\n\n/**\n * @param {object} element\n * @param {object} internalInstance\n * @return {object}\n */\nexport function createPublicInstance(element, internalInstance) {\n  const {type, props} = element;\n  const publicInstance = new type(props);\n  publicInstance._internalInstance = internalInstance;\n  return publicInstance;\n}\n","import createElement from './src/element';\nimport {Component} from './src/component';\nimport {render} from './src/reconciler';\n\nexport default {\n  createElement,\n  Component,\n  render,\n};\n\nexport {\n  createElement,\n  Component,\n  render,\n};\n","console.log('test');\nimport tenjs, {createElement} from '../../Tenjs2/ten';\n/**\n*/\nclass App extends tenjs.Component {\n  /**\n  * @return {object}\n  */\n  render() {\n    return (<div>hello {this.props.name} </div>);\n  }\n}\n\ntenjs.render(<App name='test'/>, document.getElementById('root'));\n"],"names":["TEXT_ELEMENT","createElement","type","config","args","props","Object","assign","hasChildren","length","rawChildren","concat","children","filter","child","map","createTextElement","value","nodeValue","rootInstance","render","element","container","prevInstance","nextInstance","reconcile","parentDom","instance","newInstance","instantiate","appendChild","dom","removeChild","childInstances","reconcileChildren","publicInstance","childElement","oldChildInstance","childInstance","nextChildElements","elements","newChildInstances","count","Math","max","i","newChildInstance","push","isDOMElement","isTextElement","document","createTextNode","childElements","childDoms","forEach","childDom","createPublicInstance","updateDomProperties","prevProps","nextProps","isEvent","name","startsWith","isAttribute","keys","eventType","toLowerCase","substring","removeEventListener","addEventListener","Component","state","partialState","object","_internalInstance","updateInstance","internalInstance","parentNode","console","log","App","tenjs","getElementById"],"mappings":"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"}